<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rails on Learn, Converse, Share</title><link>http://jmeridth.com/tags/rails/</link><description>Recent content in Rails on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 02 Apr 2013 00:00:00 -0500</lastBuildDate><atom:link href="http://jmeridth.com/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Default Scope and Unscoped in Rails</title><link>http://jmeridth.com/posts/using-default-scope-and-unscoped-in-rails/</link><pubDate>Tue, 02 Apr 2013 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/using-default-scope-and-unscoped-in-rails/</guid><description>&lt;p>I recently had the need to add a deleted flag to a model in a Rails project. I am usually of the mindset “explicit over implicit” so whenever I needed to use a finder to get content for that model I would do something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ruby" data-lang="ruby">&lt;span class="line">&lt;span class="cl">&lt;span class="no">User&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">where&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="ss">deleted&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kp">false&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That does lean towards not having DRY (don’t repeat yourself) code. It’s a balancing act. I decided to give default_scope a chance this time. I quickly experienced the downside of that choice. I added the default_scope to my model:&lt;/p></description></item><item><title>Has And Belongs To Many Join Table Name Must Be In Alphabetical Order</title><link>http://jmeridth.com/posts/has-and-belongs-to-many-join-table-name-must-be-in-alphabetical-order/</link><pubDate>Sun, 03 Feb 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/has-and-belongs-to-many-join-table-name-must-be-in-alphabetical-order/</guid><description>&lt;p>TL;DR&lt;/p>
&lt;p>&lt;a href="http://guides.rubyonrails.org/association_basics.html#creating-join-tables-for-has_and_belongs_to_many-associations" class="external-link" target="_blank" rel="noopener">Read this from the Rails Guides&lt;/a>&lt;/p>
&lt;p>Today I created an explicit join table between two models because each had has_and_belongs_to_many, as I’ve done many time before. Except, this time, when I tried to render one of my views, it said it couldn’t find a join table.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;p>I created users_roles and the view error stated it was looking for roles_users.&lt;/p>
&lt;p>Incorrect:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">users_roles
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Correct:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">roles_users
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My first inclination was the fact that it was looking for it in alphabetical order. Sure enough, the &lt;a href="http://guides.rubyonrails.org/association_basics.html#creating-join-tables-for-has_and_belongs_to_many-associations" class="external-link" target="_blank" rel="noopener">Rails Guide Documentation&lt;/a> states that Rails developers do need to explicitly create their join tables but they have to be in lexical order (alphabetical).&lt;/p></description></item><item><title>Create Rails Application in Current Directory</title><link>http://jmeridth.com/posts/create-rails-application-in-current-directory/</link><pubDate>Thu, 25 Oct 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/create-rails-application-in-current-directory/</guid><description>&lt;p>Yes, I know the common way to create a Rails application is&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rails new
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and this will create a subfolder with your new Rails application called .&lt;/p>
&lt;p>This post is because I keep forgetting how to create a new Rails application if I’m already in the subfolder.&lt;/p>
&lt;p>If your folder name is the same name you plan to use for your application you can use the command below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rails new .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice the period at the end telling it to use the current directory instead of creating a subdirectory.&lt;/p></description></item><item><title>Readline Error With RVM and Rails 3 on Ubuntu</title><link>http://jmeridth.com/posts/readline-error-with-rvm-and-rails-3-on-ubuntu/</link><pubDate>Thu, 25 Nov 2010 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/readline-error-with-rvm-and-rails-3-on-ubuntu/</guid><description>&lt;p>So I’m using Rails 3 with RVM these days. The last few times I created a new slice or restaged a laptop/desktop with Ubuntu I always seem to have an issue when I try to run the Rails console:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">my_app/&lt;span class="o">(&lt;/span>master&lt;span class="o">)&lt;/span>$ rails console
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/home/jmeridth/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/irb/completion.rb:9:in &lt;span class="sb">`&lt;/span>require&lt;span class="s1">&amp;#39;: no such file to load -- readline (LoadError)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">from /home/jmeridth/.rvm/rubies/ruby-1.9.2-p0/lib/ruby/1.9.1/irb/completion.rb:9:in `&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from /code/my_app/shared/bundle/ruby/1.9.1/gems/railties-3.0.1/lib/rails/commands/console.rb:3:in &lt;span class="sb">`&lt;/span>require&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">from /code/my_app/shared/bundle/ruby/1.9.1/gems/railties-3.0.1/lib/rails/commands/console.rb:3:in `&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from /code/my_app/shared/bundle/ruby/1.9.1/gems/railties-3.0.1/lib/rails/commands.rb:20:in &lt;span class="sb">`&lt;/span>require&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">from /code/my_app/shared/bundle/ruby/1.9.1/gems/railties-3.0.1/lib/rails/commands.rb:20:in `&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">from script/rails:6:in &lt;span class="sb">`&lt;/span>require&lt;span class="s1">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">from script/rails:6:in `&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I looked at the RVM site and saw how to install the readline package:&lt;/p></description></item></channel></rss>