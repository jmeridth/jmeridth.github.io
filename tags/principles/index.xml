<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Principles on Learn, Converse, Share</title><link>http://jmeridth.com/tags/principles/</link><description>Recent content in Principles on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 10 Jan 2007 00:46:00 -0600</lastBuildDate><atom:link href="http://jmeridth.com/tags/principles/index.xml" rel="self" type="application/rss+xml"/><item><title>Law of Demeter (Principle of Least Knowledge)</title><link>http://jmeridth.com/posts/law-of-demeter-principle-of-least-knowledge/</link><pubDate>Wed, 10 Jan 2007 00:46:00 -0600</pubDate><guid>http://jmeridth.com/posts/law-of-demeter-principle-of-least-knowledge/</guid><description>I was reading up on the Law of Demeter again after reading Jeremy Miller&amp;rsquo;s post about orthogonality (good post by the way).
The Law of Demeter (LoD from now on) was created at NorthEastern University, Boston in 1987 while a team was working on the Demeter project. LoD dictates that object A, when calling object BÂ should call a service on object C through B.
Example:
Bad (Common):
inventory.SalesInfo.Items.Count = 2500; Good:</description></item></channel></rss>