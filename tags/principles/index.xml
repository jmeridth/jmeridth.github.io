<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Principles on Learn, Converse, Share</title><link>http://jmeridth.com/tags/principles/</link><description>Recent content in Principles on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 10 Jan 2007 00:46:00 -0600</lastBuildDate><atom:link href="http://jmeridth.com/tags/principles/index.xml" rel="self" type="application/rss+xml"/><item><title>Law of Demeter (Principle of Least Knowledge)</title><link>http://jmeridth.com/posts/law-of-demeter-principle-of-least-knowledge/</link><pubDate>Wed, 10 Jan 2007 00:46:00 -0600</pubDate><guid>http://jmeridth.com/posts/law-of-demeter-principle-of-least-knowledge/</guid><description>&lt;p>I was reading up on the Law of Demeter again after reading &lt;a href="http://codebetter.com/blogs/jeremy.miller/archive/2007/01/08/Orthogonal-Code.aspx" class="external-link" target="_blank" rel="noopener">Jeremy Miller&amp;rsquo;s post about orthogonality&lt;/a> (good post by the way).&lt;/p>
&lt;p>&lt;strong>The Law of Demeter&lt;/strong> (LoD from now on) was created at NorthEastern University, Boston in 1987 while a team was working on the Demeter project.
LoD dictates that object A, when calling object B should call a service on object C through B.&lt;/p>
&lt;hr>
&lt;p>&lt;em>Example:&lt;/em>&lt;/p>
&lt;p>Bad (Common):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">inventory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SalesInfo&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Items&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Count&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="m">2500&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Good:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SalesInfo&lt;/span> &lt;span class="n">si&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">inventory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">SalesInfo&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">salesItemsCount&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">si&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">GetSalesItemsCount&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>[granted this might possibly be a violation of Single Responsibility Principle (SRP)  - Thanks Josh (Joshua Lockwood)]&lt;/em>&lt;/p></description></item></channel></rss>