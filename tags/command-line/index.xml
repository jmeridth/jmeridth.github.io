<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Command Line on Learn, Converse, Share</title><link>http://jmeridth.com/tags/command-line/</link><description>Recent content in Command Line on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 24 Feb 2014 21:39:00 -0600</lastBuildDate><atom:link href="http://jmeridth.com/tags/command-line/index.xml" rel="self" type="application/rss+xml"/><item><title>Using sed and regex to Remove Prefix on Filenames</title><link>http://jmeridth.com/posts/using-sed-and-regex-to-remove-prefix-on-filenames/</link><pubDate>Mon, 24 Feb 2014 21:39:00 -0600</pubDate><guid>http://jmeridth.com/posts/using-sed-and-regex-to-remove-prefix-on-filenames/</guid><description>&lt;p>I used &lt;a href="https://github.com/dreikanter/wp2md" class="external-link" target="_blank" rel="noopener">wp2md&lt;/a> recently to generate &lt;a href="http://daringfireball.net/projects/markdown/" class="external-link" target="_blank" rel="noopener">markdown&lt;/a> files out of my wordpress posts so that I could migrate to a static blog generator (like &lt;a href="http://getnikola.com" class="external-link" target="_blank" rel="noopener">Nikola&lt;/a>, the one I chose to use on this blog). However, this exported the files with a prefixidatetime stamp (e.g., 20140224-blog-title.md)&lt;/p>
&lt;p>I have used &lt;a href="http://www.gnu.org/software/sed/manual/sed.html" class="external-link" target="_blank" rel="noopener">sed&lt;/a> many times from my command line toolbox to rename files or content inside of files. Here is how I removed the prefixidatetime stamp from my filenames.&lt;/p></description></item><item><title>Dell Information Via Command Line</title><link>http://jmeridth.com/posts/dell-information-via-command-line/</link><pubDate>Mon, 15 Oct 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/dell-information-via-command-line/</guid><description>&lt;p>To get your Dell Service Tag from your workstation/laptop via command line:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">C:&lt;span class="se">\&amp;gt;&lt;/span>wmic csproduct get vendor,name,identifyingnumber
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">IdentifyingNumber Name Vendor
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ABCDEF1 Latitude E6520 Dell Inc.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I looked for this and found it because my laptop was docked and I didnâ€™t want to have to dock it to look on the bottom of the laptop&lt;/p></description></item><item><title>Bash_profile vs Bashrc</title><link>http://jmeridth.com/posts/bash-profile-vs-basrc/</link><pubDate>Sat, 06 Oct 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/bash-profile-vs-basrc/</guid><description>&lt;p>.bash_profile is sourced everytime you login to a bash shell either locally on the terminal or remotely via ssh&lt;/p>
&lt;p>.bashrc is sourced everytime you open a new shell after logging in&lt;/p>
&lt;p>I like to have my aliases stored in .bashrc and just have .bash_profile source my .bashrc file if it exists.&lt;/p>
&lt;p>I put the following in my .bash_profile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f ~/.bashrc &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This ensures my aliases and functions in my .bashrc are applied when I remotely ssh into my Linux boxes and it avoids duplication across multiple files.&lt;/p></description></item><item><title>PostgreSQL Command Line Cheat Sheet</title><link>http://jmeridth.com/posts/postgresql-command-line-cheat-sheet/</link><pubDate>Tue, 02 Oct 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/postgresql-command-line-cheat-sheet/</guid><description>&lt;script src="https://gist.github.com/jmeridth/f2ad6b580ae18501c538.js">&lt;/script></description></item><item><title>Testing Mail From the Command Line on Ubuntu</title><link>http://jmeridth.com/posts/testing-mail-from-the-command-line-on-ubuntu/</link><pubDate>Wed, 19 Sep 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/testing-mail-from-the-command-line-on-ubuntu/</guid><description>&lt;p>Install mailutils&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">sudo apt-get install mailutils
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Send some test piped into the mail command&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;testing&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> mail -s Test user@emailhost.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check the email address listed above&lt;/p></description></item></channel></rss>