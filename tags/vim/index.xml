<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on Learn, Converse, Share</title><link>http://jmeridth.com/tags/vim/</link><description>Recent content in Vim on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 05 Jan 2019 11:09:26 +0000</lastBuildDate><atom:link href="http://jmeridth.com/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Gocode Vim Plugin and Go Modules</title><link>http://jmeridth.com/posts/gocode-vim-plugin-and-go-modules/</link><pubDate>Sat, 05 Jan 2019 11:09:26 +0000</pubDate><guid>http://jmeridth.com/posts/gocode-vim-plugin-and-go-modules/</guid><description>&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: My friend &lt;a href="https://twitter.com/_seemethere" class="external-link" target="_blank" rel="noopener"&gt;Eli Uriegas&lt;/a&gt; let me know that you don&amp;rsquo;t need &lt;code&gt;gocode&lt;/code&gt; anymore since &lt;code&gt;vim-go&lt;/code&gt; has autocompletion. I tested it out and he is correct. &lt;a href="https://twitter.com/_seemethere/status/1081626050717728770" class="external-link" target="_blank" rel="noopener"&gt;Here&lt;/a&gt; is his tweet with a link to his dotfiles on how he sets up his &lt;code&gt;.vimrc&lt;/code&gt; to use &lt;code&gt;vim-go&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Original Post:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I recently purchased &lt;a href="https://lets-go.alexedwards.net/" class="external-link" target="_blank" rel="noopener"&gt;Let&amp;rsquo;s Go&lt;/a&gt; from Alex Edwards. I wanted an end-to-end Golang website tutorial. It has been great. Lots learned.&lt;/p&gt;
&lt;p&gt;Unfortunately, he is using Go&amp;rsquo;s modules and the version of the gocode Vim plugin I was using did not support Go modules.&lt;/p&gt;</description></item><item><title>Docker Daemon Error When Running Docker Compose</title><link>http://jmeridth.com/posts/docker-daemon-error-when-running-docker-compose/</link><pubDate>Tue, 02 Jan 2018 12:11:00 -0600</pubDate><guid>http://jmeridth.com/posts/docker-daemon-error-when-running-docker-compose/</guid><description>&lt;p&gt;&lt;img src="http://jmeridth.com/img/why-docker-why-i-just-want-to-deploy.jpg" alt="docker why"&gt;&lt;/p&gt;
&lt;p&gt;TL;DR Make sure you don&amp;rsquo;t have any old mounted volumes around if you see the error below.&lt;/p&gt;
&lt;p&gt;I just got the following error when trying to run &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;ERROR: Couldn&lt;span class="s1"&gt;&amp;#39;t connect to Docker daemon at http+docker://localunixsocket
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;- is it running?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;&lt;span class="s1"&gt;If it&amp;#39;&lt;/span&gt;s at a non-standard location,
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;specify the URL with the DOCKER_HOST environment variable.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Please note I have a database using a mounted volume. The issue was that the previous mount was still present. Once I deleted that, &lt;code&gt;docker-compose up -d&lt;/code&gt; would work jut fine.&lt;/p&gt;</description></item><item><title>Ubuntu - set caps lock to escape</title><link>http://jmeridth.com/posts/ubuntu-set-caps-lock-to-escape/</link><pubDate>Wed, 22 Nov 2017 10:05:00 -0600</pubDate><guid>http://jmeridth.com/posts/ubuntu-set-caps-lock-to-escape/</guid><description>&lt;p&gt;I just got a new laptop and had to google again on how to set caps lock key to escape (I&amp;rsquo;m a Vim user).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo apt-get install dconf-tools
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;dconf write /org/gnome/desktop/input-sources/xkb-options &lt;span class="s2"&gt;&amp;#34;[&amp;#39;caps:escape&amp;#39;]&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To know your options, use the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man xkeyboard-config&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(MAN pages are your friend; man is short for manual)&lt;/p&gt;
&lt;p&gt;You can also now use the &lt;code&gt;Dconf&lt;/code&gt; GUI editor if you must (SHAME! ;) )&lt;/p&gt;
&lt;p&gt;Type &lt;code&gt;Dconf&lt;/code&gt; in Unity or Gnome app opener and go to the following location:&lt;/p&gt;</description></item><item><title>Vim Tagbar Plugin</title><link>http://jmeridth.com/posts/vim-tagbar-plugin/</link><pubDate>Sun, 03 Jul 2016 09:16:00 -0500</pubDate><guid>http://jmeridth.com/posts/vim-tagbar-plugin/</guid><description>&lt;p&gt;I found the &lt;a href="https://github.com/majutsushi/tagbar" class="external-link" target="_blank" rel="noopener"&gt;tagbar&lt;/a&gt; Vim plugin last night and finally tried it out this morning. I like it. I mapped &lt;code&gt;,tb&lt;/code&gt; to showing it &lt;a href="https://github.com/jmeridth/dotfiles/blob/master/vimrc" class="external-link" target="_blank" rel="noopener"&gt;in my .vimrc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One of the requirements is &lt;a href="http://ctags.sourceforge.net/" class="external-link" target="_blank" rel="noopener"&gt;Exuberant Ctags&lt;/a&gt;. Since I&amp;rsquo;m on OSX I installed it with &lt;a href="https://brew.sh" class="external-link" target="_blank" rel="noopener"&gt;Homebrew&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;brew install ctags&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In a Python file it will group/fold all of your imports, classes, methods, etc in one view. It is very nice and when you press enter on one of them it takes you to that item in the current buffer.&lt;/p&gt;</description></item><item><title>Personal VIM Cheatsheet</title><link>http://jmeridth.com/posts/personal-vim-cheatsheet/</link><pubDate>Tue, 19 Apr 2016 15:36:00 -0500</pubDate><guid>http://jmeridth.com/posts/personal-vim-cheatsheet/</guid><description>&lt;p&gt;&lt;em&gt;Originally posted on 03-03-2014 and continually updated&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Will be adding to this post as I learn/remember shortcuts&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; - repeat last command in normal mode&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@:&lt;/code&gt; then &lt;code&gt;@@&lt;/code&gt; - repeat last command entered with &lt;code&gt;:&lt;/code&gt; &lt;a href="http://vim.wikia.com/wiki/Repeat_last_colon_command" class="external-link" target="_blank" rel="noopener"&gt;source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; - find all occurances of the word I&amp;rsquo;m currently on&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dfc&lt;/code&gt; - delete everything including the letter &amp;lsquo;c&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dtc&lt;/code&gt; - delete everything up to the letter &amp;lsquo;c&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:e!&lt;/code&gt; - reload current file (typically after doing a git pull)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;:b#&lt;/code&gt; - go back to previous buffer&lt;/li&gt;
&lt;li&gt;shift+h - go to top of screen&lt;/li&gt;
&lt;li&gt;shift+m - go to middle of screen&lt;/li&gt;
&lt;li&gt;shift+l - go to bottom of screen&lt;/li&gt;
&lt;li&gt;ctrl+v &lt;code&gt;[h|j|k|l]&lt;/code&gt; - highlight individual items (great for highlighting column(s)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gUiw&lt;/code&gt; - capitalize the current word&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gUU&lt;/code&gt; - capitalize current line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vU&lt;/code&gt; - capitalize current character&lt;/li&gt;
&lt;li&gt;&lt;code&gt;guiw&lt;/code&gt; - lowercase the current word&lt;/li&gt;
&lt;li&gt;&lt;code&gt;guu&lt;/code&gt; - lowercase the current line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vu&lt;/code&gt; - lowercase current character&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[num]j&lt;/code&gt; - go down num lines from current line&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[num]k&lt;/code&gt; - go up num lines from current line&lt;/li&gt;
&lt;li&gt;ctrl+O - jump back to previous (older) location in file &lt;a href="http://vim.wikia.com/wiki/Jumping_to_previously_visited_locations" class="external-link" target="_blank" rel="noopener"&gt;info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ctrl+I - jump forward to next (newer) location in file &lt;a href="http://vim.wikia.com/wiki/Jumping_to_previously_visited_locations" class="external-link" target="_blank" rel="noopener"&gt;info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ctrl+w + [H,J,K,L] - move current window to the far left, bottom, top or right&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;keybindings I use all the time via mappgings in my &lt;a href="https://github.com/jmeridth/dotfiles/blob/master/vimrc" class="external-link" target="_blank" rel="noopener"&gt;.vimrc&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Set VIM as Default Editor</title><link>http://jmeridth.com/posts/set-vim-as-default-editor/</link><pubDate>Wed, 06 Mar 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/set-vim-as-default-editor/</guid><description>&lt;p&gt;Environment: Ubuntu&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" class="chroma"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;sudo update-alternatives --config editor
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;OUTPUT:
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;There are &lt;span class="m"&gt;4&lt;/span&gt; choices &lt;span class="k"&gt;for&lt;/span&gt; the alternative editor &lt;span class="o"&gt;(&lt;/span&gt;providing /usr/bin/editor&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; Selection Path Priority Status
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;------------------------------------------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;* &lt;span class="m"&gt;0&lt;/span&gt; /bin/nano &lt;span class="m"&gt;40&lt;/span&gt; auto mode
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;1&lt;/span&gt; /bin/ed -100 manual mode
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;2&lt;/span&gt; /bin/nano &lt;span class="m"&gt;40&lt;/span&gt; manual mode
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;3&lt;/span&gt; /usr/bin/vim.basic &lt;span class="m"&gt;30&lt;/span&gt; manual mode
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt; &lt;span class="m"&gt;4&lt;/span&gt; /usr/bin/vim.tiny &lt;span class="m"&gt;10&lt;/span&gt; manual mode
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;Press enter to keep the current choice&lt;span class="o"&gt;[&lt;/span&gt;*&lt;span class="o"&gt;]&lt;/span&gt;, or &lt;span class="nb"&gt;type&lt;/span&gt; selection number: &lt;span class="m"&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class="line"&gt;&lt;span class="cl"&gt;update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor &lt;span class="o"&gt;(&lt;/span&gt;editor&lt;span class="o"&gt;)&lt;/span&gt; in manual mode
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item></channel></rss>