<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vim on Learn, Converse, Share</title><link>http://jmeridth.com/tags/vim/</link><description>Recent content in Vim on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 05 Jan 2019 11:09:26 +0000</lastBuildDate><atom:link href="http://jmeridth.com/tags/vim/index.xml" rel="self" type="application/rss+xml"/><item><title>Gocode Vim Plugin and Go Modules</title><link>http://jmeridth.com/posts/gocode-vim-plugin-and-go-modules/</link><pubDate>Sat, 05 Jan 2019 11:09:26 +0000</pubDate><guid>http://jmeridth.com/posts/gocode-vim-plugin-and-go-modules/</guid><description>Update: My friend Eli Uriegas let me know that you don&amp;rsquo;t need gocode anymore since vim-go has autocompletion. I tested it out and he is correct. Here is his tweet with a link to his dotfiles on how he sets up his .vimrc to use vim-go
Original Post:
I recently purchased Let&amp;rsquo;s Go from Alex Edwards. I wanted an end-to-end Golang website tutorial. It has been great. Lots learned.
Unfortunately, he is using Go&amp;rsquo;s modules and the version of the gocode Vim plugin I was using did not support Go modules.</description></item><item><title>Docker Daemon Error When Running Docker Compose</title><link>http://jmeridth.com/posts/docker-daemon-error-when-running-docker-compose/</link><pubDate>Tue, 02 Jan 2018 12:11:00 -0600</pubDate><guid>http://jmeridth.com/posts/docker-daemon-error-when-running-docker-compose/</guid><description>TL;DR Make sure you don&amp;rsquo;t have any old mounted volumes around if you see the error below.
I just got the following error when trying to run docker-compose up -d
ERROR: Couldn&amp;#39;t connect to Docker daemon at http+docker://localunixsocket - is it running? If it&amp;#39;s at a non-standard location, specify the URL with the DOCKER_HOST environment variable. Please note I have a database using a mounted volume. The issue was that the previous mount was still present.</description></item><item><title>Ubuntu - set caps lock to escape</title><link>http://jmeridth.com/posts/ubuntu-set-caps-lock-to-escape/</link><pubDate>Wed, 22 Nov 2017 10:05:00 -0600</pubDate><guid>http://jmeridth.com/posts/ubuntu-set-caps-lock-to-escape/</guid><description>I just got a new laptop and had to google again on how to set caps lock key to escape (I&amp;rsquo;m a Vim user).
sudo apt-get install dconf-tools dconf write /org/gnome/desktop/input-sources/xkb-options &amp;#34;[&amp;#39;caps:escape&amp;#39;]&amp;#34; To know your options, use the following command:
man xkeyboard-config
(MAN pages are your friend; man is short for manual)
You can also now use the Dconf GUI editor if you must (SHAME! ;) )
Type Dconf in Unity or Gnome app opener and go to the following location:</description></item><item><title>Vim Tagbar Plugin</title><link>http://jmeridth.com/posts/vim-tagbar-plugin/</link><pubDate>Sun, 03 Jul 2016 09:16:00 -0500</pubDate><guid>http://jmeridth.com/posts/vim-tagbar-plugin/</guid><description>I found the tagbar Vim plugin last night and finally tried it out this morning. I like it. I mapped ,tb to showing it in my .vimrc.
One of the requirements is Exuberant Ctags. Since I&amp;rsquo;m on OSX I installed it with Homebrew:
brew install ctags
In a Python file it will group/fold all of your imports, classes, methods, etc in one view. It is very nice and when you press enter on one of them it takes you to that item in the current buffer.</description></item><item><title>Personal VIM Cheatsheet</title><link>http://jmeridth.com/posts/personal-vim-cheatsheet/</link><pubDate>Tue, 19 Apr 2016 15:36:00 -0500</pubDate><guid>http://jmeridth.com/posts/personal-vim-cheatsheet/</guid><description>Originally posted on 03-03-2014 and continually updated
Will be adding to this post as I learn/remember shortcuts
. - repeat last command in normal mode @: then @@ - repeat last command entered with : source # - find all occurances of the word I&amp;rsquo;m currently on dfc - delete everything including the letter &amp;lsquo;c&amp;rsquo; dtc - delete everything up to the letter &amp;lsquo;c&amp;rsquo; :e! - reload current file (typically after doing a git pull) :b# - go back to previous buffer shift+h - go to top of screen shift+m - go to middle of screen shift+l - go to bottom of screen ctrl+v [h|j|k|l] - highlight individual items (great for highlighting column(s) gUiw - capitalize the current word gUU - capitalize current line vU - capitalize current character guiw - lowercase the current word guu - lowercase the current line vu - lowercase current character [num]j - go down num lines from current line [num]k - go up num lines from current line ctrl+O - jump back to previous (older) location in file info ctrl+I - jump forward to next (newer) location in file info ctrl+w + [H,J,K,L] - move current window to the far left, bottom, top or right keybindings I use all the time via mappgings in my .</description></item><item><title>Set VIM as Default Editor</title><link>http://jmeridth.com/posts/set-vim-as-default-editor/</link><pubDate>Wed, 06 Mar 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/set-vim-as-default-editor/</guid><description>Environment: Ubuntu
sudo update-alternatives --config editor OUTPUT: There are 4 choices for the alternative editor (providing /usr/bin/editor). Selection Path Priority Status ------------------------------------------------------------ * 0 /bin/nano 40 auto mode 1 /bin/ed -100 manual mode 2 /bin/nano 40 manual mode 3 /usr/bin/vim.basic 30 manual mode 4 /usr/bin/vim.tiny 10 manual mode Press enter to keep the current choice[*], or type selection number: 3 update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor (editor) in manual mode</description></item></channel></rss>