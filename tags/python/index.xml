<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Learn, Converse, Share</title><link>http://jmeridth.com/tags/python/</link><description>Recent content in Python on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 26 Jun 2016 11:04:10 -0500</lastBuildDate><atom:link href="http://jmeridth.com/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>How I Setup My Local Python Environment</title><link>http://jmeridth.com/posts/how-i-setup-my-local-python-environment/</link><pubDate>Sun, 26 Jun 2016 11:04:10 -0500</pubDate><guid>http://jmeridth.com/posts/how-i-setup-my-local-python-environment/</guid><description>&lt;p>I&amp;rsquo;ve had a few people ask me lately how I setup my local python environment.&lt;/p>
&lt;p>I am using iterm2 (v3.0.0) on OSX. That means I am using &lt;a href="https://brew.sh" class="external-link" target="_blank" rel="noopener">homebrew&lt;/a> and I installed &lt;code>wget&lt;/code> and &lt;code>curl&lt;/code> via brew.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">/usr/bin/ruby -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew install wget
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">brew install curl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the python package manager &lt;a href="https://pip.pypa.io/en/stable://pip.pypa.io/en/stable/" class="external-link" target="_blank" rel="noopener">pip&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">wget https://bootstrap.pypa.io/get-pip.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python get-pip.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the &lt;a href="https://virtualenvwrapper.readthedocs.io/en/latest/" class="external-link" target="_blank" rel="noopener">virtualenvwrapper&lt;/a> package. It lets you manage python virtual environments easier than just using &lt;a href="https://virtualenv.pypa.io/en/stable/" class="external-link" target="_blank" rel="noopener">virtualenv&lt;/a>&lt;/p>
&lt;p>&lt;code>sudo pip install virtualenvwrapper&lt;/code>&lt;/p></description></item><item><title>How To Use the Python Debugger aka pdb</title><link>http://jmeridth.com/posts/how-to-use-python-debugger-aka-pdb/</link><pubDate>Wed, 22 Jun 2016 15:10:10 -0500</pubDate><guid>http://jmeridth.com/posts/how-to-use-python-debugger-aka-pdb/</guid><description>&lt;p>I have been using the Python Debugger aka pdb &lt;a href="https://docs.python.org/2/library/pdb.html" class="external-link" target="_blank" rel="noopener">docs for 2.7&lt;/a>/&lt;a href="https://docs.python.org/3.5/library/pdb.html" class="external-link" target="_blank" rel="noopener">docs for 3.5&lt;/a> a lot recently and wanted to share a cheat sheet I found and also the common commands I use.&lt;/p>
&lt;p>The cheatsheet:&lt;/p>
&lt;p>&lt;img alt="pdb cheatsheet" src="%7B%7Bsite.url%7D%7D/images/pdb_cheatsheet.png">&lt;/p>
&lt;p>The easiest thing to do is put the following in your code somewhere:&lt;/p>
&lt;pre>&lt;code> import pdb; pdb.set_trace()
&lt;/code>&lt;/pre>
&lt;p>Then when you run it, it will stop there and you can step through the code a line at a time. The &lt;code>l(ist)&lt;/code> command will show you 11 lines of code around the current line is the one I use the most. &lt;code>s(tep)&lt;/code>, &lt;code>n(ext)&lt;/code>, &lt;code>r(eturn)&lt;/code> are some other I use regularly.&lt;/p></description></item><item><title>How to Run a Single Test With Tox</title><link>http://jmeridth.com/posts/how-to-run-a-single-test-with-tox/</link><pubDate>Fri, 07 Mar 2014 04:49:53 -0600</pubDate><guid>http://jmeridth.com/posts/how-to-run-a-single-test-with-tox/</guid><description>&lt;p>I have to run a single python test once in a while and keep forgetting how to do it with Tox.&lt;/p>
&lt;p>Here it is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">tox -e py27 -- project_name_here/tests/folder_name1_here/folder_name2_here/test_file_name_here.py:TestClassName.test_method_name
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hope this helps someone else.&lt;/p>
&lt;p>Happy bit twiddling.&lt;/p></description></item><item><title>xkcd - ubuntu, python comics</title><link>http://jmeridth.com/posts/xkcd-ubuntu-python-comics/</link><pubDate>Mon, 28 Apr 2008 16:34:00 -0500</pubDate><guid>http://jmeridth.com/posts/xkcd-ubuntu-python-comics/</guid><description>&lt;p>If you don&amp;rsquo;t currently read &lt;a href="http://www.xkcd.com" class="external-link" target="_blank" rel="noopener">xkcd.com&lt;/a>, you should be.Â  It has some mushy lovey dovey junk in it sometimes, but the python references and open source references are hilarious.&lt;/p>
&lt;p>Today&amp;rsquo;s comic: (mouse over for the Ubuntu reference)&lt;/p>
&lt;p>&lt;img src="http://imgs.xkcd.com/comics/zealous_autoconfig.png">&lt;/p>
&lt;p>One of my other favs:&lt;/p>
&lt;p>&lt;img src="http://imgs.xkcd.com/comics/python.png">&lt;/p></description></item></channel></rss>