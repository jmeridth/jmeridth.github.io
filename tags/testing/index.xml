<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Learn, Converse, Share</title><link>http://jmeridth.com/tags/testing/</link><description>Recent content in Testing on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Fri, 07 Mar 2014 04:49:53 -0600</lastBuildDate><atom:link href="http://jmeridth.com/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Run a Single Test With Tox</title><link>http://jmeridth.com/posts/how-to-run-a-single-test-with-tox/</link><pubDate>Fri, 07 Mar 2014 04:49:53 -0600</pubDate><guid>http://jmeridth.com/posts/how-to-run-a-single-test-with-tox/</guid><description>&lt;p>I have to run a single python test once in a while and keep forgetting how to do it with Tox.&lt;/p>
&lt;p>Here it is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">tox -e py27 -- project_name_here/tests/folder_name1_here/folder_name2_here/test_file_name_here.py:TestClassName.test_method_name
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hope this helps someone else.&lt;/p>
&lt;p>Happy bit twiddling.&lt;/p></description></item><item><title>Run a Specific RSpec Spec</title><link>http://jmeridth.com/posts/run-a-specific-rspec-spec/</link><pubDate>Sat, 23 Mar 2013 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/run-a-specific-rspec-spec/</guid><description>&lt;p>&lt;strong>Update:&lt;/strong> You can specify a line number to run in your spec if you&amp;rsquo;re wanting to run a specific spec. Example: &lt;code>rspec spec/controllers/sessions_controller_spec.rb:90&lt;/code>&lt;/p>
&lt;p>Tired of looking this up and want to use my writing part of my brain to blog it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rake spec &lt;span class="nv">SPEC&lt;/span>&lt;span class="o">=&lt;/span>spec/controllers/sessions_controller_spec.rb &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="nv">SPEC_OPTS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;-e \&amp;#34;should log in with cookie\&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is importatnt to me while coding Rails because if I just run&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rspec specs/controllers/sessions_controller_spec.rb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>the test database isn’t cleared out. By running &lt;code>rake spec&lt;/code> I get that.&lt;/p></description></item><item><title>How to Capture the Exception Message From Assert.Throws in NUnit</title><link>http://jmeridth.com/posts/how-to-capture-exception-message-from-assert-throws-in-nunit/</link><pubDate>Fri, 23 Mar 2012 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/how-to-capture-exception-message-from-assert-throws-in-nunit/</guid><description>&lt;p>In the past I’ve used:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="na">[ExpectedException(typeof(CustomException), ExpectedMessage=&amp;#34;blah blah blah&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to set an exception expectation and assert on the message. With the recent releases of NUnit I’ve finally transitioned all my code to use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Assert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Throws&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">CustomException&lt;/span>&lt;span class="p">&amp;gt;(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">someType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">someMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">someValue&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>or&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Assert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Throws&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">CustomException&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="n">someType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">someMethod&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>if the method has no parameters.&lt;/p>
&lt;p>Only lately have I needed to capture the exception message and validate it. To do this you do the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-csharp" data-lang="csharp">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">var&lt;/span> &lt;span class="n">ex&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">Assert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Throws&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">CustomException&lt;/span>&lt;span class="p">&amp;gt;(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">someType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">someMethod&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">someValue&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Assert&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">That&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ex&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Is&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">EqualTo&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;expected message here&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am blogging about this because I keep forgetting how to capture the exception message. Hope it helps someone else.&lt;/p></description></item></channel></rss>