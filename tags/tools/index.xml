<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools on Learn, Converse, Share</title><link>http://jmeridth.com/tags/tools/</link><description>Recent content in Tools on Learn, Converse, Share</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 23 Mar 2013 00:00:00 -0500</lastBuildDate><atom:link href="http://jmeridth.com/tags/tools/index.xml" rel="self" type="application/rss+xml"/><item><title>Run a Specific RSpec Spec</title><link>http://jmeridth.com/posts/run-a-specific-rspec-spec/</link><pubDate>Sat, 23 Mar 2013 00:00:00 -0500</pubDate><guid>http://jmeridth.com/posts/run-a-specific-rspec-spec/</guid><description>Update: You can specify a line number to run in your spec if you&amp;rsquo;re wanting to run a specific spec. Example: rspec spec/controllers/sessions_controller_spec.rb:90
Tired of looking this up and want to use my writing part of my brain to blog it:
rake spec SPEC=spec/controllers/sessions_controller_spec.rb \ SPEC_OPTS=&amp;#34;-e \&amp;#34;should log in with cookie\&amp;#34;&amp;#34; This is importatnt to me while coding Rails because if I just run
rspec specs/controllers/sessions_controller_spec.rb the test database isn’t cleared out.</description></item><item><title>Set VIM as Default Editor</title><link>http://jmeridth.com/posts/set-vim-as-default-editor/</link><pubDate>Wed, 06 Mar 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/set-vim-as-default-editor/</guid><description>Environment: Ubuntu
sudo update-alternatives --config editor OUTPUT: There are 4 choices for the alternative editor (providing /usr/bin/editor). Selection Path Priority Status ------------------------------------------------------------ * 0 /bin/nano 40 auto mode 1 /bin/ed -100 manual mode 2 /bin/nano 40 manual mode 3 /usr/bin/vim.basic 30 manual mode 4 /usr/bin/vim.tiny 10 manual mode Press enter to keep the current choice[*], or type selection number: 3 update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor (editor) in manual mode</description></item><item><title>Setup RVM and Ruby</title><link>http://jmeridth.com/posts/setup-rvm-and-ruby/</link><pubDate>Wed, 06 Mar 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/setup-rvm-and-ruby/</guid><description>I’m putting this here so that I have it saved. I’ve done this many times and until I automate it with a Puppet or Chef script….
Install curl
sudo apt-get install curl Install RVM (forgot this, thanks Jasdeep)
curl -L get.rvm.io | bash -s stable --auto Reload .bash_profile
. ~/.bash_profile Run rvm requirements to see what needs to be installed
rvm requirements ... Requirements for ubuntu/12.10/x86_64 NOTE: &amp;#39;ruby&amp;#39; represents Matz&amp;#39;s Ruby Interpreter (MRI) (1.</description></item><item><title>TMUX Cheat Sheet</title><link>http://jmeridth.com/posts/tmux-cheat-sheet/</link><pubDate>Wed, 06 Mar 2013 00:00:00 -0600</pubDate><guid>http://jmeridth.com/posts/tmux-cheat-sheet/</guid><description>Install TMUX
sudo apt-get install tmux personal config file is at ~/.tmux.conf
change prefix to ctrl-a instead of default ctrl-b (easier on my hands)
unbind C-b set -g prefix C-a Outside of session Link to heading tmux list-sessions List all sessions tmux list-keys List all key bindings tmux list-commands List all commands tmux source-file ~/.tmux.conf Reload TMUX conf file tmux a -t session_name Attach to named session Inside of session Link to heading Ctrl-a, new -s session_name Create new named session Ctrl-a, c Create new window Ctrl-a, , Rename window Ctrl-a, w List windows Ctrl-a, l Move to previously selected window Ctrl-a, n Move to next window Ctrl-a, p Move to previous window Ctrl-a, d Leave session Ctrl-a, s List sessions - default, if not mapped elsewhere Ctrl-a, ?</description></item><item><title>Pair Programming with Screen</title><link>http://jmeridth.com/posts/pair-programming-with-screen/</link><pubDate>Thu, 04 Feb 2010 16:44:00 -0600</pubDate><guid>http://jmeridth.com/posts/pair-programming-with-screen/</guid><description>I’ve decided, once again, to make the jump back to VIM full-time. It will help my bash-fu become stronger and also ensure that I can pair program with any other dev. TextMate is awesome for personal development, but using NERDTree (example) and vim.rails (cheat sheet) by @tpope has made my VIM experience much more pleasant..
Checkout my vim files on github
This post is for me to remember how to use Gnu screen to pair program.</description></item><item><title>TextMate and Community Server 2008.5</title><link>http://jmeridth.com/posts/textmate-and-community-server-2008-5/</link><pubDate>Thu, 21 May 2009 08:32:38 -0500</pubDate><guid>http://jmeridth.com/posts/textmate-and-community-server-2008-5/</guid><description>This is my first blog post from TextMate on my Mac. I&amp;rsquo;m using the HTML formatting. I will try the markdown and textile versions later. The key to getting this working with Community Server was when you click &amp;ldquo;Bundles-&amp;gt;Blogging-&amp;gt;Setup Blogs&amp;rdquo; and the following template shows up:
# List of Blogs # # Enter a blog name followed by the endpoint URL # # Blog Name URL you put the following underneath the commented header</description></item><item><title>WinSnap</title><link>http://jmeridth.com/posts/winsnap/</link><pubDate>Tue, 02 Jan 2007 00:52:00 -0600</pubDate><guid>http://jmeridth.com/posts/winsnap/</guid><description>I&amp;rsquo;ve used a few screen shot capturing tools and have even used the famous Alt-PrintScreen.
The best FREE tool I&amp;rsquo;ve used lately is WinSnap.</description></item></channel></rss>